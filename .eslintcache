[{"/home/whalyf/Documentos/projects/klutch/frontend/src/App.tsx":"1","/home/whalyf/Documentos/projects/klutch/frontend/src/routes.tsx":"2","/home/whalyf/Documentos/projects/klutch/frontend/src/components/TitleItem.tsx":"3","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/LendingCalc.tsx":"4","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Borrow.tsx":"5","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Register.tsx":"6","/home/whalyf/Documentos/projects/klutch/frontend/src/components/HeaderBar.tsx":"7","/home/whalyf/Documentos/projects/klutch/frontend/src/index.tsx":"8","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/CardType.tsx":"9","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Confirmation.tsx":"10","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/ConfirmationSucceed.tsx":"11","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Details.tsx":"12"},{"size":157,"mtime":1610809830886,"results":"13","hashOfConfig":"14"},{"size":1022,"mtime":1610996213823,"results":"15","hashOfConfig":"14"},{"size":517,"mtime":1611180525322,"results":"16","hashOfConfig":"14"},{"size":5395,"mtime":1611163776142,"results":"17","hashOfConfig":"14"},{"size":2784,"mtime":1611168329824,"results":"18","hashOfConfig":"14"},{"size":4432,"mtime":1611170671398,"results":"19","hashOfConfig":"14"},{"size":659,"mtime":1611178462170,"results":"20","hashOfConfig":"14"},{"size":198,"mtime":1610805754265,"results":"21","hashOfConfig":"14"},{"size":1443,"mtime":1611026138405,"results":"22","hashOfConfig":"14"},{"size":7725,"mtime":1611176444539,"results":"23","hashOfConfig":"14"},{"size":5366,"mtime":1611153273322,"results":"24","hashOfConfig":"14"},{"size":6209,"mtime":1611182058249,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"p4r2a9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/whalyf/Documentos/projects/klutch/frontend/src/App.tsx",[],["56","57"],"/home/whalyf/Documentos/projects/klutch/frontend/src/routes.tsx",[],["58","59"],"/home/whalyf/Documentos/projects/klutch/frontend/src/components/TitleItem.tsx",[],"/home/whalyf/Documentos/projects/klutch/frontend/src/pages/LendingCalc.tsx",["60","61"],"import React, { FormEvent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport HeaderBar from '../components/HeaderBar';\nimport TitleItem from '../components/TitleItem';\nimport '../styles/pages/lending-calc.css';\n\nimport backend from '../api.json';\n\ninterface TableData{\n    id: number;\n    name: string;\n    installments: {\n        id: number;\n        installments: number;\n        installmentInterest: number;\n        installmentValue: number;\n        fullValue: number;\n        comission: number;\n    };\n}\n\ninterface FooterData{\n    id: number;\n    installments: number;\n    installmentInterest: number;\n    installmentValue: number;\n    fullValue: number;\n    comission: number;\n}\n\n\nexport default function LendingCalc(){\n    const history = useHistory();\n    const tables = backend.rateTable;\n    const [value, setValue]= useState<string>('');\n    const [showTable, setShowTable] = useState<boolean>(false);\n    const [tab, setTab] = useState<number>();\n    const [footer, setFooter] = useState<number>();\n    const [footerData, setFooterData] = useState<Object>();\n    //const [tableDat, setTableDat] = useState<TableData>();\n\n    //localStorage tags\n    const tagTable = '@table/type';\n    const tagQuota = '@table/quota';\n    const tagValue = '@value/intended';\n\n    function AllTables(){\n        return(\n            <td>\n            {tables.map(category=>(\n                <ul key={category.id}>\n                    <table className=\"tbl\">\n                        <div className=\"table-header\">\n                            <div className=\"radio-title\">\n                                <input type=\"radio\" onChange={()=>updateTableData(category.id)} name=\"table-select\" id=\"\"/>\n                                <th>{category.name}</th> \n                            </div>\n                            <div className=\"headers\">\n                                <th>Parcela</th>\n                                <th>Juros da Parcela</th>\n                                <th>Valor Parcela</th>\n                                <th>Valor Total</th>\n                                <th>Comissão</th>\n                            </div>\n                        </div>\n                        {category.installments.map(eachItem=>(\n                            <tr className=\"table-items\">\n                                <input type=\"radio\" onChange={()=>updateFooterData(eachItem.id,category.id)} name=\"quota-select\" id=\"\"/>\n                                <td>{eachItem.installments}</td>\n                                <td>{eachItem.installmentInterest}%</td>\n                                <td>R${eachItem.installmentValue}</td>\n                                <td>R${eachItem.fullValue}</td>\n                                <td>R${eachItem.comission}</td>\n                            </tr>\n                        ))}\n                    </table>\n                </ul>  \n            ))}   \n            </td>\n        )\n    };\n\n    async function updateFooterData(each: number, cat:number){\n        setFooter(each);\n        setTab(cat);\n        let tableData = (_.find(tables,{id:cat}));\n        await setFooterData((_.find(tableData?.installments,{id:each})));\n        console.log(footerData)\n    };\n\n    function updateTableData(num: number){\n        setTab(num);\n    };\n\n    function handleSelectTable(){\n        localStorage.setItem(tagTable, JSON.stringify(tab));\n        localStorage.setItem(tagQuota, JSON.stringify(footer));\n        history.push('/borrow');\n    };\n\n    function handleCalculate(event: FormEvent){\n        event.preventDefault();\n        localStorage.setItem(tagValue, value);\n        setShowTable(true);\n    }; \n\n    return(\n        <div>\n            <HeaderBar/>\n            <div className=\"container\">\n                <TitleItem text=\"Simulacão de taxas\"/>\n                <div className=\"input-area\">\n                    <label htmlFor=\"Value\">Valor Desejado</label>\n                    <form className=\"input-field\" onSubmit={handleCalculate}>\n                        <input \n                            id=\"string\"\n                            placeholder=\"R$0,00\"\n                            type=\"number\" \n                            value={value} \n                            required={true} \n                            min=\"300.00\" \n                            max=\"10000.00\" \n                            step=\".05\"\n                            pattern=\"\\d*\" \n                            onChange={event=>setValue(event.target.value)}\n                        />\n                        <button className=\"button\"type=\"submit\">Calcular</button>\n                    </form>\n                </div>\n                {showTable ?(\n                    <>\n                    <AllTables/>\n                    <div className=\"footer\">\n                        <div className=\"footer-content\">\n                            <label htmlFor=\"Name\">Nome:{}</label>\n                            <label htmlFor=\"Quota\">Parcelas:{}</label>\n                            <label htmlFor=\"Quota Value\">Valor da Parcela:{}</label>\n                        </div>\n                            <button className=\"button\"onClick={handleSelectTable}>Avançar</button>\n                    </div>\n                    </>\n                ):(\n                    <p></p>\n                )}\n            </div>\n            \n        </div>\n    )\n}","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Borrow.tsx",[],"/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Register.tsx",["62","63","64"],"/home/whalyf/Documentos/projects/klutch/frontend/src/components/HeaderBar.tsx",[],"/home/whalyf/Documentos/projects/klutch/frontend/src/index.tsx",[],["65","66"],"/home/whalyf/Documentos/projects/klutch/frontend/src/pages/CardType.tsx",[],["67","68"],"/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Confirmation.tsx",["69","70","71","72","73","74","75","76","77","78"],"/home/whalyf/Documentos/projects/klutch/frontend/src/pages/ConfirmationSucceed.tsx",["79","80","81","82"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FiCheck } from 'react-icons/fi';\nimport _ from 'lodash';\n\nimport HeaderBar from '../components/HeaderBar';\nimport TitleItem from '../components/TitleItem';\n\nimport '../styles/pages/confirmation-succeed.css';\nimport backend from '../api.json';\n\ninterface Client{\n    name: string;\n    card_number: string;\n    month_year: string;\n    code: string;\n}\n\nexport default function ConfirmationSucceed(){\n    const history = useHistory();\n    //Recoverying localStorageData\n    const tables = backend.rateTable;\n    const [tableId, setTableId] = useState(Number(localStorage.getItem('@table/type')));\n    const tableData = (_.find(tables,{id:tableId}));\n    const [client, setClient] = useState<Client>(JSON.parse(String(localStorage.getItem('@card/data'))));\n    const [intended_value, setIntendedValue] = useState(Number(localStorage.getItem('@value/intended')));\n    const [quotaId, setQuotaId] = useState(Number(localStorage.getItem('@table/quota')));\n    let total_value = Number(tableData?.installments[quotaId].fullValue);\n    let quota_value = Number(tableData?.installments[quotaId].installmentValue);\n    let fee = Number(tableData?.installments[quotaId].installmentInterest);\n    let quota = Number(tableData?.installments.length);\n       \n    function ClientData(){\n        return(\n            <div className=\"all-form\">\n                <div className=\"confirms\">\n                    <div className=\"confirm\">\n                        <label className=\"confirm-name label\" htmlFor=\"IntendedValue\">Name:</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-name-value\" htmlFor=\"IntendedValueValue\">{client.name}</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                    <div className=\"confirm\">\n                        <label className=\"confirm-fee label\" htmlFor=\"IntendedValue\">Taxa:</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-fee-value\" htmlFor=\"IntendedValueValue\">{fee} %</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                    <div className=\"confirm\">\n                        <label className=\"confirm-card label\" htmlFor=\"IntendedValue\">Cartão:</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-card-value\" htmlFor=\"IntendedValueValue\">{client.card_number}</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                    <div className=\"confirm\">\n                        <label className=\"confirm-quota label\" htmlFor=\"IntendedValue\">Parcelas:</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-quota-value\" htmlFor=\"IntendedValueValue\">{quota}</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                    <div className=\"confirm\">\n                        <label className=\"confirm-intended label\" htmlFor=\"IntendedValue\">Valor Desejado</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-intended-value\" htmlFor=\"IntendedValueValue\">R$ {intended_value}</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                    <div className=\"confirm\">\n                        <label className=\"confirm-quota-total label\" htmlFor=\"IntendedValue\">Valor da Parcela:</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-quota-total-value\" htmlFor=\"IntendedValueValue\">R$ {quota_value}</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"total\">\n                    <div className=\"confirm\">\n                        <label className=\"confirm-total label\" htmlFor=\"IntendedValue\">Valor total do empréstimo</label>\n                        <div className=\"right-confirm\">\n                            <label className=\"confirm-total-value\" htmlFor=\"IntendedValueValue\">R$ {total_value}</label>\n                            <FiCheck size={39} color=\"#228A95\"/>\n                        </div>\n                    </div>\n                    <button className=\"button\" onClick={()=>history.push('/details')}>\n                        Detalhe da Solicitação\n                    </button>\n                    <label className=\"last-text\" htmlFor=\"credfica\">O CredFica avaliará a solicitação</label>\n                </div>\n        </div>    \n        )\n    }\n    return(\n        <>\n            <HeaderBar/>\n            <div className=\"container\">\n                <TitleItem text=\"Solicitar Empréstimo\"/>\n                <h2>Solicitação Realizada com Sucesso !</h2>\n                <h3>Resumo da Solicitação</h3>\n                <ClientData/>\n            </div>\n        </>\n    )\n}","/home/whalyf/Documentos/projects/klutch/frontend/src/pages/Details.tsx",["83","84","85","86","87","88","89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":11,"column":11,"nodeType":"100","messageId":"101","endLine":11,"endColumn":20},{"ruleId":"98","severity":1,"message":"102","line":24,"column":11,"nodeType":"100","messageId":"101","endLine":24,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":77,"column":33,"nodeType":"105","endLine":77,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":81,"column":33,"nodeType":"105","endLine":81,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":85,"column":33,"nodeType":"105","endLine":85,"endColumn":45},{"ruleId":"92","replacedBy":"106"},{"ruleId":"94","replacedBy":"107"},{"ruleId":"92","replacedBy":"108"},{"ruleId":"94","replacedBy":"109"},{"ruleId":"98","severity":1,"message":"110","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"111","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":11},{"ruleId":"98","severity":1,"message":"112","line":15,"column":11,"nodeType":"100","messageId":"101","endLine":15,"endColumn":24},{"ruleId":"98","severity":1,"message":"113","line":30,"column":11,"nodeType":"100","messageId":"101","endLine":30,"endColumn":21},{"ruleId":"98","severity":1,"message":"114","line":56,"column":21,"nodeType":"100","messageId":"101","endLine":56,"endColumn":31},{"ruleId":"98","severity":1,"message":"115","line":59,"column":22,"nodeType":"100","messageId":"101","endLine":59,"endColumn":33},{"ruleId":"98","severity":1,"message":"116","line":60,"column":24,"nodeType":"100","messageId":"101","endLine":60,"endColumn":37},{"ruleId":"98","severity":1,"message":"117","line":61,"column":11,"nodeType":"100","messageId":"101","endLine":61,"endColumn":17},{"ruleId":"98","severity":1,"message":"118","line":64,"column":28,"nodeType":"100","messageId":"101","endLine":64,"endColumn":44},{"ruleId":"98","severity":1,"message":"119","line":65,"column":21,"nodeType":"100","messageId":"101","endLine":65,"endColumn":31},{"ruleId":"98","severity":1,"message":"114","line":23,"column":21,"nodeType":"100","messageId":"101","endLine":23,"endColumn":31},{"ruleId":"98","severity":1,"message":"120","line":25,"column":20,"nodeType":"100","messageId":"101","endLine":25,"endColumn":29},{"ruleId":"98","severity":1,"message":"118","line":26,"column":28,"nodeType":"100","messageId":"101","endLine":26,"endColumn":44},{"ruleId":"98","severity":1,"message":"119","line":27,"column":21,"nodeType":"100","messageId":"101","endLine":27,"endColumn":31},{"ruleId":"98","severity":1,"message":"121","line":5,"column":13,"nodeType":"100","messageId":"101","endLine":5,"endColumn":16},{"ruleId":"98","severity":1,"message":"114","line":22,"column":21,"nodeType":"100","messageId":"101","endLine":22,"endColumn":31},{"ruleId":"98","severity":1,"message":"119","line":24,"column":21,"nodeType":"100","messageId":"101","endLine":24,"endColumn":31},{"ruleId":"98","severity":1,"message":"120","line":25,"column":20,"nodeType":"100","messageId":"101","endLine":25,"endColumn":29},{"ruleId":"98","severity":1,"message":"122","line":26,"column":22,"nodeType":"100","messageId":"101","endLine":26,"endColumn":33},{"ruleId":"98","severity":1,"message":"123","line":27,"column":18,"nodeType":"100","messageId":"101","endLine":27,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":52,"column":33,"nodeType":"105","endLine":52,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":57,"column":33,"nodeType":"105","endLine":57,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":62,"column":33,"nodeType":"105","endLine":62,"endColumn":45},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"@typescript-eslint/no-unused-vars","'TableData' is defined but never used.","Identifier","unusedVar","'FooterData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["124"],["125"],["124"],["125"],"'useEffect' is defined but never used.","'api' is defined but never used.","'Solicitations' is defined but never used.","'FullClient' is defined but never used.","'setTableId' is assigned a value but never used.","'setClientiD' is assigned a value but never used.","'setClientCard' is assigned a value but never used.","'client' is assigned a value but never used.","'setIntendedValue' is assigned a value but never used.","'setQuotaId' is assigned a value but never used.","'setClient' is assigned a value but never used.","'now' is defined but never used.","'setclientId' is assigned a value but never used.","'setType' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]